name: MAIN_CD

on:
  push:
    branches: [ main ]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  Build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # ECR 인증, 로그인, 이미지 태그 및 푸시 관련 단계 삭제
      # 로컬 빌드 아티팩트(예: JAR 파일) 및 docker-compose.yml를 이용해 EC2에서 직접 빌드 예정

  Deploy:
    name: Deploy
    needs: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # docker-compose.yml을 EC2로 전송
      - name: Copy docker-compose file to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          source: "docker-compose.yml"
          target: "/home/ubuntu"

      # 포트 종료 스크립트 전송
      - name: Upload stop-used-port script to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          source: "stop-used-port.sh"
          target: "/home/ubuntu"

      # EC2에 SSH로 접속하여 배포 작업 수행
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo chmod +x /home/ubuntu/stop-used-port.sh && /home/ubuntu/stop-used-port.sh
            cd /home/ubuntu
            # 현재 구동 중인 컨테이너 종료
            docker compose down
            # 로컬에서 직접 이미지 빌드 (docker-compose.yml 내 Dockerfile 참조)
            docker compose build
            # 새로운 컨테이너 백그라운드 실행
            docker compose up -d --no-build
